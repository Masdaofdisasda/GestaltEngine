@startuml

entity Entity {
    *id : int
}

entity MeshComponent {
    *id : int
    --
    mesh_id : int
}

entity Mesh {
  *mesh_id : int
  --
  name: string
  surfaces: MeshSurface
  local_bounds: AABB
}

entity MeshSurface {
  meshlet_offset: int
  meshlet_count: int

  vertex_count: int
  index_count: int
  first_index: int
  vertex_offset: int
  local_bounds: AABB
  
  material_id: int
}

entity AABB {
  min: vec3
  max: vec3
}

entity Meshlet {
  *meshlet_offset: int
  *meshlet_count: int
  --
  center: vec3
  radius: float
  
  cone_axis: vec3
  cone_cutoff: int

  vertex_offset: int
  index_offset: int
  mesh_draw_index: int
  vertex_count: int
  triangle_count: int
}

entity MeshletVertex {
  *vertex_offset: int
  *local_vertex_index: int
  --
  global_vertex_index: int
}

entity MeshletIndex {
  *index_offset: int
  --
  local_vertex_index: int
}

entity VertexPosition {
  *global_vertex_index: int
  --
  position: vec3
}

entity VertexData {
  *global_vertex_index: int
  --
  normal: vec3
  tangent: vec3
  uv: vec2
}

entity MeshDraw {
  *mesh_draw_index: int
  --
  position: vec3
  scale: float
  orientation: vec4

  min: vec3
  max: vec3

  meshlet_offset: int
  meshlet_count: int

  vertex_count: int
  index_count: int
  first_index: int
  vertex_offset: int

  material_id: int
}

entity Material {
  *material_id: int
  --
  name: string
  config: PbrMaterial
  is_dirty: bool
}

entity PbrMaterial {
  constant: PbrConstants
  textures: PbrTextures
}

entity PbrConstants {
    // Define PBR material constants here
}

entity PbrTextures {
    // Define PBR material textures here
}

' Define relationships (foreign keys)
Entity ||--o{ MeshComponent : "contains"
MeshComponent ||--o{ Mesh : "contains"
Mesh -- AABB : "has"
Mesh "1" -- "1..*" MeshSurface : "contains"
MeshSurface -- AABB : "has"
MeshSurface "1" -- "1..*" Meshlet : "contains"
MeshSurface -- Material : "references"
Meshlet "1" -- "1..*" MeshletVertex : "contains"
Meshlet "1" -- "3..*" MeshletIndex : "contains"
Meshlet "1..*"--"1" MeshDraw : "drawn by"
MeshletVertex -- VertexPosition : "references"
MeshletVertex -- MeshletIndex : "references"
MeshletVertex -- VertexData : "references"
MeshDraw -- Material : "references"
Material -- PbrMaterial : "configured by"
PbrMaterial -- PbrConstants : "has"
PbrMaterial -- PbrTextures : "has"



@enduml
